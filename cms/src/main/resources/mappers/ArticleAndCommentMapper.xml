<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.roud.cms.mapper.ArticleAndCommentMapper">

    <resultMap id="CommentWithSubResult" type="top.roud.cms.entity.Comment">
        <id property="id" column="id"/>
        <result property="content" column="content"/>
        <result property="op_time" column="op_time"/>
        <result property="article_id" column="article_id"/>
        <result property="parent_id" column="parent_id"/>
        <result property="from_name" column="from_name"/>
        <result property="to_name" column="to_name"/>
        <result property="headimg" column="headimg"/>
        <result property="motto" column="motto"/>
        <result property="sex" column="sex"/>
        <result property="email" column="email"/>
        <collection property="child_comments" resultMap="CommentResult"/>
    </resultMap>
    <resultMap id="CommentResult" type="top.roud.cms.entity.Comment">
        <id property="id" column="sub_id"/>
        <result property="content" column="sub_content"/>
        <result property="op_time" column="sub_op_time"/>
        <result property="article_id" column="sub_article_id"/>
        <result property="parent_id" column="sub_parent_id"/>
        <result property="from_name" column="sub_from_name"/>
        <result property="to_name" column="sub_to_name"/>
        <result property="headimg" column="sub_headimg"/>
        <result property="email" column="sub_email"/>
        <result property="motto" column="sub_motto"/>
        <result property="sex" column="sub_sex"/>
    </resultMap>

    <insert id="insertComment" parameterType="top.roud.cms.entity.Comment">
        insert into rb_comment(id, content, op_time, from_name, parent_id, to_name, article_id, headimg, sex, email, motto) values (#{id}, #{content},#{op_time}, #{from_name}, #{parent_id}, #{to_name}, #{article_id}, #{headimg},#{sex}, #{email}, #{motto});
    </insert>

    <select id="findAllCommentsByArticle" resultType="List" resultMap="CommentWithSubResult" parameterType="Long">
        select
            id, op_time,content,from_name,to_name,parent_id,article_id,headimg,sex,email,motto,sub_id, sub_op_time,sub_content,sub_from_name,sub_to_name,sub_parent_id,sub_article_id,sub_headimg,sub_sex,sub_email,sub_motto
        from
            (select
                 c.id id,c.op_time,c.content,c.from_name,c.to_name, c.parent_id, c.article_id,c.headimg,c.sex,c.email,c.motto,c1.id sub_id, c1.op_time sub_op_time,c1.content sub_content,c1.from_name sub_from_name,c1.to_name sub_to_name, c1.parent_id sub_parent_id, c1.article_id sub_article_id,c1.headimg sub_headimg,c1.sex sub_sex,c1.email sub_email,c1.motto sub_motto
             from
                 rb_comment c
                     LEFT OUTER JOIN
                     rb_comment c1
                     on
                         c.id=c1.parent_id) c
        where
            c.parent_id='-1'
            and
            c.article_id=#{article_id}
        order by
            id desc
    </select>

    <delete id="delById" parameterType="long">
        delete from rb_comment where id=#{id}
    </delete>

    <delete id="delByArticleId" parameterType="long">
        delete from rb_comment where article_id=#{article_id}
    </delete>

</mapper>